version: '3'

services:

  nginx:
    image: busybox

  sentry-web:
    restart: always
    image: sentry:8.19.0
    env_file: env/sentry.env
    command: "sentry-run web"
    depends_on:
      - redis
      - postgres
      - rabbitmq
      - sentry-cron
      - sentry-worker
    volumes:
      - ./config/sentry.conf.py:/etc/sentry/sentry.conf.py:ro
      - ./data/sentry-web/files:/var/lib/sentry/files
      - ./data/sentry-installer:/tmp/installer
      - ./bin/sentry-run:/usr/local/bin/sentry-run
    logging:
      options:
        max-size: 100m

  sentry-cron:
    restart: always
    image: sentry:8.19.0
    env_file: env/sentry.env
    command: "sentry-run cron"
    depends_on:
      - redis
      - postgres
      - rabbitmq
    volumes:
      - ./config/sentry.conf.py:/etc/sentry/sentry.conf.py:ro
      - ./data/sentry-cron/files:/var/lib/sentry/files
      - ./data/sentry-installer:/tmp/installer
      - ./bin/sentry-run:/usr/local/bin/sentry-run
    logging:
      options:
        max-size: 100m

  sentry-worker:
    restart: always
    image: sentry:8.19.0
    env_file: env/sentry.env
    command: "sentry-run worker"
    depends_on:
      - redis
      - postgres
      - rabbitmq
    volumes:
      - ./config/sentry.conf.py:/etc/sentry/sentry.conf.py:ro
      - ./data/sentry-worker/files:/var/lib/sentry/files
      - ./data/sentry-installer:/tmp/installer
      - ./bin/sentry-run:/usr/local/bin/sentry-run
    logging:
      options:
        max-size: 100m

  sentry-installer:
    image: sentry:8.19.0
    env_file: env/sentry.env
    command: "sentry-install"
    depends_on:
      - redis
      - postgres
      - rabbitmq
    volumes:
      - ./config/sentry.conf.py:/etc/sentry/sentry.conf.py:ro
      - ./data/sentry-installer:/tmp/installer
      - ./bin/sentry-install:/usr/local/bin/sentry-install
    logging:
      options:
        max-size: 100m

  rabbitmq:
    restart: always
    image: rabbitmq:3.6.10-alpine
    volumes:
      - "./data/rabbitmq:/var/lib/rabbitmq"
    logging:
      options:
        max-size: 100m

  redis:
    restart: always
    image: redis:3.2.10-alpine
    volumes:
      - "./data/redis:/data"
    logging:
      options:
        max-size: 100m

  postgres:
    restart: always
    image: postgres:9.6.3-alpine
    env_file: env/postgres.env
    volumes:
      - "./data/postgres/etc:/etc/postgresql"
      - "./data/postgres/log:/var/log/postgresql"
      - "./data/postgres/data:/var/lib/postgresql/data"
    logging:
      options:
        max-size: 100m

  smtp:
    restart: always
    image: tianon/exim4
    logging:
      options:
        max-size: 100m
